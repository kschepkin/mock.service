from fastapi import FastAPI, HTTPException
from fastapi.middleware.cors import CORSMiddleware
from fastapi.staticfiles import StaticFiles
from fastapi.responses import HTMLResponse
import logging
import os
from contextlib import asynccontextmanager
from logging.handlers import RotatingFileHandler

from app.database import async_engine, Base
from app.api import mock_services, mock_handler, websocket, swagger, server_info, wsdl
from app.models import mock_service  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü


def setup_application_logging():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å —Ä–æ—Ç–∞—Ü–∏–µ–π"""
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤
    logs_dir = os.getenv("LOG_DIR", "logs")
    os.makedirs(logs_dir, exist_ok=True)
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    log_level = os.getenv("LOG_LEVEL", "INFO").upper()
    max_size_str = os.getenv("LOG_MAX_SIZE", "50MB")
    backup_count = int(os.getenv("LOG_BACKUP_COUNT", "10"))
    
    # –ü–∞—Ä—Å–∏–º —Ä–∞–∑–º–µ—Ä
    def parse_size(size_str: str) -> int:
        size_str = size_str.upper().strip()
        if size_str.endswith('KB'):
            return int(size_str[:-2]) * 1024
        elif size_str.endswith('MB'):
            return int(size_str[:-2]) * 1024 * 1024
        elif size_str.endswith('GB'):
            return int(size_str[:-2]) * 1024 * 1024 * 1024
        else:
            return int(size_str)
    
    max_bytes = parse_size(max_size_str)
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–æ—Ä–Ω–µ–≤–æ–π –ª–æ–≥–≥–µ—Ä
    root_logger = logging.getLogger()
    root_logger.setLevel(getattr(logging, log_level))
    
    # –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    for handler in root_logger.handlers[:]:
        root_logger.removeHandler(handler)
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä
    formatter = logging.Formatter(
        "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
    )
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ñ–∞–π–ª–∞ —Å —Ä–æ—Ç–∞—Ü–∏–µ–π
    file_handler = RotatingFileHandler(
        os.path.join(logs_dir, "application.log"),
        maxBytes=max_bytes,
        backupCount=backup_count,
        encoding='utf-8'
    )
    file_handler.setFormatter(formatter)
    root_logger.addHandler(file_handler)
    
    # –ö–æ–Ω—Å–æ–ª—å–Ω—ã–π –≤—ã–≤–æ–¥ (–¥–ª—è Docker)
    console_handler = logging.StreamHandler()
    console_handler.setFormatter(formatter)
    root_logger.addHandler(console_handler)
    
    return root_logger


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = setup_application_logging()


@asynccontextmanager
async def lifespan(app: FastAPI):
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    logger.info("–ó–∞–ø—É—Å–∫ Mock Service...")
    logger.info(f"–õ–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤: {os.getenv('LOG_DIR', 'logs')}")
    logger.info(f"–†–∞–∑–º–µ—Ä –ª–æ–≥–∞: {os.getenv('LOG_MAX_SIZE', '50MB')}")
    logger.info(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤: {os.getenv('LOG_BACKUP_COUNT', '10')}")
    
    async with async_engine.begin() as conn:
        await conn.run_sync(Base.metadata.create_all)
    logger.info("–¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
    
    yield
    
    # –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
    logger.info("–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã Mock Service...")


# –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è FastAPI
app = FastAPI(
    title="Mock Service API",
    description="""
## Mock Service - –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è mock API

### –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
- **–°–æ–∑–¥–∞–Ω–∏–µ mock —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤** - –±—ã—Å—Ç—Ä–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö API
- **–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤** - –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏  
- **Proxy —Ä–µ–∂–∏–º** - –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –≤–Ω–µ—à–Ω–∏–µ —Å–µ—Ä–≤–∏—Å—ã
- **–ò–º–ø–æ—Ä—Ç Swagger/OpenAPI** - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ mock'–æ–≤ –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
- **–ò–º–ø–æ—Ä—Ç WSDL** - –ø–æ–¥–¥–µ—Ä–∂–∫–∞ SOAP —Å–µ—Ä–≤–∏—Å–æ–≤
- **–ì–∏–±–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞** - —É—Å–ª–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞, –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –≤–∞–ª–∏–¥–∞—Ü–∏—è

### –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã:
- **Mock Services** - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ mock —Å–µ—Ä–≤–∏—Å–∞–º–∏
- **Swagger Import** - –∏–º–ø–æ—Ä—Ç –∏–∑ Swagger/OpenAPI —Ñ–∞–π–ª–æ–≤
- **WSDL Import** - –∏–º–ø–æ—Ä—Ç SOAP —Å–µ—Ä–≤–∏—Å–æ–≤
- **Logs** - –ø—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –∑–∞–ø—Ä–æ—Å–æ–≤
- **WebSocket** - real-time –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ª–æ–≥–æ–≤

### –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:
- **Swagger UI**: [/docs](/docs) - –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
- **ReDoc**: [/redoc](/redoc) - –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è

---

""",
    version="1.0.0",
    docs_url="/docs",
    redoc_url="/redoc",
    openapi_url="/openapi.json",
    lifespan=lifespan
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –¥–æ–º–µ–Ω–∞–º–∏
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–æ–≤
app.include_router(server_info.router)
app.include_router(mock_services.router)
app.include_router(swagger.router)
app.include_router(wsdl.router)
app.include_router(websocket.router)

# –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –¥–ª—è frontend (–µ—Å–ª–∏ –µ—Å—Ç—å)
if os.path.exists("static"):
    app.mount("/static", StaticFiles(directory="static"), name="static")

# –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
@app.get("/", response_class=HTMLResponse)
async def root():
    return """
    <!DOCTYPE html>
    <html>
    <head>
        <title>Mock Service</title>
        <meta charset="utf-8">
        <style>
            body { font-family: Arial, sans-serif; margin: 50px; background: linear-gradient(135deg, #f0f7f8 0%, #e6f3f5 100%); }
            .container { max-width: 800px; margin: 0 auto; }
            .endpoint { background: #f5f5f5; padding: 10px; margin: 10px 0; border-radius: 5px; }
            .header { text-align: center; margin-bottom: 40px; }
            .footer { text-align: center; margin-top: 60px; padding: 20px; background: rgba(37, 96, 111, 0.1); border-radius: 10px; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Mock Service API</h1>
                <p>–°–µ—Ä–≤–∏—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è mock API —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞–º–∏</p>
            </div>
            
            <h2>üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API</h2>
            <div class="endpoint">
                <strong>Swagger UI:</strong> <a href="/docs">/docs</a>
            </div>
            <div class="endpoint">
                <strong>ReDoc:</strong> <a href="/redoc">/redoc</a>
            </div>
            
            <h2>üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Mock –°–µ—Ä–≤–∏—Å–∞–º–∏</h2>
            <div class="endpoint">
                <strong>–°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–∏—Å–æ–≤:</strong> GET /api/mock-services/
            </div>
            <div class="endpoint">
                <strong>–°–æ–∑–¥–∞—Ç—å —Å–µ—Ä–≤–∏—Å:</strong> POST /api/mock-services/
            </div>
            <div class="endpoint">
                <strong>–ü–æ–ª—É—á–∏—Ç—å —Å–µ—Ä–≤–∏—Å:</strong> GET /api/mock-services/{id}
            </div>
            <div class="endpoint">
                <strong>–û–±–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–∏—Å:</strong> PUT /api/mock-services/{id}
            </div>
            <div class="endpoint">
                <strong>–£–¥–∞–ª–∏—Ç—å —Å–µ—Ä–≤–∏—Å:</strong> DELETE /api/mock-services/{id}
            </div>
            
            <h2>üìä –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ</h2>
            <div class="endpoint">
                <strong>–í—Å–µ –ª–æ–≥–∏:</strong> GET /api/mock-services/logs/all
            </div>
            <div class="endpoint">
                <strong>–õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞:</strong> GET /api/mock-services/{id}/logs
            </div>
            <div class="endpoint">
                <strong>WebSocket –≤—Å–µ –ª–æ–≥–∏:</strong> WS /ws/logs
            </div>
            <div class="endpoint">
                <strong>WebSocket –ª–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞:</strong> WS /ws/logs/{id}
            </div>
            
            <h2>üéØ Mock –≠–Ω–¥–ø–æ–∏–Ω—Ç—ã</h2>
            <p>–í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø—É—Ç–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –∫–∞–∫ mock —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã —Å–æ–≥–ª–∞—Å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º —Å–µ—Ä–≤–∏—Å–æ–≤</p>
            
        </div>
    </body>
    </html>
    """

@app.get("/health")
async def health_check():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞"""
    return {"status": "healthy", "message": "Mock Service —Ä–∞–±–æ—Ç–∞–µ—Ç"}

# –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ mock –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –∫–æ–Ω—Ü–µ, —á—Ç–æ–±—ã –æ–Ω –Ω–µ –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–ª API –º–∞—Ä—à—Ä—É—Ç—ã
app.include_router(mock_handler.router) 