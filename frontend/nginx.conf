worker_processes auto;
error_log /usr/local/openresty/nginx/logs/error.log warn;
pid /usr/local/openresty/nginx/logs/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /usr/local/openresty/nginx/conf/mime.types;
    default_type application/octet-stream;
    
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /usr/local/openresty/nginx/logs/access.log main;
    
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;

        # Обслуживание статических файлов
        location / {
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        # Проксирование API запросов к backend
        location /api/ {
            proxy_pass http://backend:8080/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Проксирование WebSocket соединений
        location /ws/ {
            proxy_pass http://backend:8080/ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Config file handling
        location = /config/api-settings.json {
            # Handle PUT requests for writing config
            if ($request_method = PUT) {
                content_by_lua_file /usr/local/openresty/nginx/write-config.lua;
            }
            
            # Handle OPTIONS for CORS
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "GET, PUT, OPTIONS";
                add_header Access-Control-Allow-Headers "Content-Type, X-Config-Write";
                add_header Content-Length 0;
                return 204;
            }
            
            # Handle GET requests for reading config  
            add_header Content-Type application/json;
            add_header Access-Control-Allow-Origin *;
            try_files /config/api-settings.json =404;
        }

        # Логи
        access_log /usr/local/openresty/nginx/logs/access.log;
        error_log /usr/local/openresty/nginx/logs/error.log;
    }
} 